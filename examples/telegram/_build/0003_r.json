{
    "Parameters": {
        "CodeBucket": {
            "Description": "Bucket where the code is located.",
            "Type": "String"
        },
        "ControllerjsS3Version": {
            "Type": "String"
        },
        "ControllerpyS3Version": {
            "Type": "String"
        },
        "Region": {
            "Description": "AWS Region",
            "Type": "String"
        },
        "Stage": {
            "Default": "dev",
            "Description": "Name of the Stage",
            "Type": "String"
        },
        "VersionS3Version": {
            "Type": "String"
        }
    },
    "Resources": {
        "BotControllerjs": {
            "DependsOn": [
                "ControllerjsRole"
            ],
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "CodeBucket"
                    },
                    "S3Key": "bot_controllerjs.zip",
                    "S3ObjectVersion": {
                        "Ref": "ControllerjsS3Version"
                    }
                },
                "Description": "",
                "Handler": "code.handler",
                "MemorySize": 128,
                "Role": {
                    "Fn::GetAtt": [
                        "ControllerjsRole",
                        "Arn"
                    ]
                },
                "Runtime": "nodejs4.3",
                "Timeout": 3
            },
            "Type": "AWS::Lambda::Function"
        },
        "BotControllerpy": {
            "DependsOn": [
                "ControllerpyRole"
            ],
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "CodeBucket"
                    },
                    "S3Key": "bot_controllerpy.zip",
                    "S3ObjectVersion": {
                        "Ref": "ControllerpyS3Version"
                    }
                },
                "Description": "",
                "Handler": "code.handler",
                "MemorySize": 128,
                "Role": {
                    "Fn::GetAtt": [
                        "ControllerpyRole",
                        "Arn"
                    ]
                },
                "Runtime": "python2.7",
                "Timeout": 3
            },
            "Type": "AWS::Lambda::Function"
        },
        "ContribLambdasVersion": {
            "DependsOn": [
                "VersionRole"
            ],
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "CodeBucket"
                    },
                    "S3Key": "contrib_lambdas_version.zip",
                    "S3ObjectVersion": {
                        "Ref": "VersionS3Version"
                    }
                },
                "Description": "Publishes new versions of Lambdas.",
                "Handler": "version.handler",
                "MemorySize": 128,
                "Role": {
                    "Fn::GetAtt": [
                        "VersionRole",
                        "Arn"
                    ]
                },
                "Runtime": "python2.7",
                "Timeout": 300
            },
            "Type": "AWS::Lambda::Function"
        },
        "ControllerjsCurrentalias": {
            "DependsOn": [
                "ControllerjsVersion"
            ],
            "Properties": {
                "FunctionName": {
                    "Ref": "BotControllerjs"
                },
                "FunctionVersion": {
                    "Fn::GetAtt": [
                        "ControllerjsVersion",
                        "Version"
                    ]
                },
                "Name": "current"
            },
            "Type": "AWS::Lambda::Alias"
        },
        "ControllerjsRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "lambda:InvokeFunction"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "arn:aws:logs:*:*:*"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "ControllerjsLogsPolicy"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "ControllerjsVersion": {
            "DependsOn": [
                "VersionCurrentalias",
                "BotControllerjs"
            ],
            "Properties": {
                "FunctionName": {
                    "Ref": "BotControllerjs"
                },
                "S3ObjectVersion": {
                    "Ref": "ControllerjsS3Version"
                },
                "ServiceToken": {
                    "Ref": "VersionCurrentalias"
                }
            },
            "Type": "Custom::LambdaVersion"
        },
        "ControllerpyCurrentalias": {
            "DependsOn": [
                "ControllerpyVersion"
            ],
            "Properties": {
                "FunctionName": {
                    "Ref": "BotControllerpy"
                },
                "FunctionVersion": {
                    "Fn::GetAtt": [
                        "ControllerpyVersion",
                        "Version"
                    ]
                },
                "Name": "current"
            },
            "Type": "AWS::Lambda::Alias"
        },
        "ControllerpyRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "lambda:InvokeFunction"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "arn:aws:logs:*:*:*"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "ControllerpyLogsPolicy"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "ControllerpyVersion": {
            "DependsOn": [
                "VersionCurrentalias",
                "BotControllerpy"
            ],
            "Properties": {
                "FunctionName": {
                    "Ref": "BotControllerpy"
                },
                "S3ObjectVersion": {
                    "Ref": "ControllerpyS3Version"
                },
                "ServiceToken": {
                    "Ref": "VersionCurrentalias"
                }
            },
            "Type": "Custom::LambdaVersion"
        },
        "Telegramexampleapi": {
            "Properties": {
                "Description": "My telegram API",
                "Name": "telegramexampleapi"
            },
            "Type": "AWS::ApiGateway::RestApi"
        },
        "TelegramexampleapiDeployment0Be28F67": {
            "DependsOn": [
                "TelegramexampleapiPyPost",
                "TelegramexampleapiJsPost"
            ],
            "Properties": {
                "RestApiId": {
                    "Ref": "Telegramexampleapi"
                },
                "StageName": "dev"
            },
            "Type": "AWS::ApiGateway::Deployment"
        },
        "TelegramexampleapiJsPost": {
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "POST",
                "Integration": {
                    "Credentials": {
                        "Fn::GetAtt": [
                            "TelegramexampleapiRole",
                            "Arn"
                        ]
                    },
                    "IntegrationHttpMethod": "POST",
                    "IntegrationResponses": [
                        {
                            "SelectionPattern": "",
                            "StatusCode": "200"
                        }
                    ],
                    "Type": "AWS",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Ref": "ControllerjsCurrentalias"
                                },
                                "/invocations?Qualifier=current"
                            ]
                        ]
                    }
                },
                "MethodResponses": [
                    {
                        "StatusCode": "200"
                    }
                ],
                "ResourceId": {
                    "Ref": "TelegramexampleapiResourceJs"
                },
                "RestApiId": {
                    "Ref": "Telegramexampleapi"
                }
            },
            "Type": "AWS::ApiGateway::Method"
        },
        "TelegramexampleapiPyPost": {
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "POST",
                "Integration": {
                    "Credentials": {
                        "Fn::GetAtt": [
                            "TelegramexampleapiRole",
                            "Arn"
                        ]
                    },
                    "IntegrationHttpMethod": "POST",
                    "IntegrationResponses": [
                        {
                            "SelectionPattern": "",
                            "StatusCode": "200"
                        }
                    ],
                    "Type": "AWS",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Ref": "ControllerpyCurrentalias"
                                },
                                "/invocations?Qualifier=current"
                            ]
                        ]
                    }
                },
                "MethodResponses": [
                    {
                        "StatusCode": "200"
                    }
                ],
                "ResourceId": {
                    "Ref": "TelegramexampleapiResourcePy"
                },
                "RestApiId": {
                    "Ref": "Telegramexampleapi"
                }
            },
            "Type": "AWS::ApiGateway::Method"
        },
        "TelegramexampleapiResourceJs": {
            "Properties": {
                "ParentId": {
                    "Fn::GetAtt": [
                        "Telegramexampleapi",
                        "RootResourceId"
                    ]
                },
                "PathPart": "js",
                "RestApiId": {
                    "Ref": "Telegramexampleapi"
                }
            },
            "Type": "AWS::ApiGateway::Resource"
        },
        "TelegramexampleapiResourcePy": {
            "Properties": {
                "ParentId": {
                    "Fn::GetAtt": [
                        "Telegramexampleapi",
                        "RootResourceId"
                    ]
                },
                "PathPart": "py",
                "RestApiId": {
                    "Ref": "Telegramexampleapi"
                }
            },
            "Type": "AWS::ApiGateway::Resource"
        },
        "TelegramexampleapiRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "apigateway.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "lambda:InvokeFunction"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "TelegramexampleapiRolePolicy"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "VersionCurrentalias": {
            "DependsOn": [
                "VersionVersion"
            ],
            "Properties": {
                "FunctionName": {
                    "Ref": "ContribLambdasVersion"
                },
                "FunctionVersion": {
                    "Fn::GetAtt": [
                        "VersionVersion",
                        "Version"
                    ]
                },
                "Name": "current"
            },
            "Type": "AWS::Lambda::Alias"
        },
        "VersionRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "lambda:InvokeFunction"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "arn:aws:logs:*:*:*"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "VersionLogsPolicy"
                    },
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "lambda:PublishVersion",
                                        "lambda:GetFunction"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "arn:aws:lambda:*:*:*"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "VersionManageVersionPolicy"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "VersionVersion": {
            "DependsOn": [
                "ContribLambdasVersion",
                "ContribLambdasVersion"
            ],
            "Properties": {
                "FunctionName": {
                    "Ref": "ContribLambdasVersion"
                },
                "S3ObjectVersion": {
                    "Ref": "VersionS3Version"
                },
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "ContribLambdasVersion",
                        "Arn"
                    ]
                }
            },
            "Type": "Custom::LambdaVersion"
        }
    }
}