Running lambdas locally
==========================

While developing lambdas it is quite useful to be able to run lambdas locally and see how they behave when receiving certain events.
This should not be consider a replacement for writing tests - You should write tests for your code!

In order to locally invoke your lambdas you can do so by running:

.. code-block:: bash

    $ echo '{... JSON ...}' | gordon run APP.LAMBDA


Gordon expects ``stdin`` to be the json formated event your lambda will receive. It is important to note that your lambda will
be executed after collecting all resources and applying the full ``build`` process, so you can expect dependencies to be available.

Python lambdas
----------------

Python lambdas don't require any specific setup, but you should keep in mind the limitations of of the mock ``LambdaContext`` object that gordon
uses as second argument of your lambda. You can find the current implementation `here <https://github.com/jorgebastida/gordon/blob/master/gordon/loaders/python.py>`_.

We'll try to make this mock more clever overtime. PR Welcome!


Node Lambdas
--------------------

Node lambdas don't require any specific setup, but you should keep in mind the limitations of of the mock ``LambdaContext`` object that gordon
uses as second argument of your lambda. You can find the current implementation `here <https://github.com/jorgebastida/gordon/blob/master/gordon/loaders/node.js>`_.

We'll try to make this mock more clever overtime. PR Welcome!


Java Lambdas
---------------

Java lambdas require you to write a new constructor which accepts a ``String`` as the first argument.

In a similart way than Python and Javascript lambdas you should keep in mind the limitations of of the ``MockContext`` object that gordon
uses as second argument of your lambda. You can find the current implementation `here <https://github.com/jorgebastida/gordon/blob/master/gordon/loaders/java/src/main/java/gordon/GordonLoader.java>`_.

We'll try to make this mock more clever overtime. PR Welcome!
